    ;; list of key codes in Karabiner: 
    ;;   https://github.com/pqrs-org/Karabiner-Elements/issues/925
    ;; !  | mandatory  (not recursive) modifiers which must be pressed
    ;; #  | optional   (recursive) modifiers which can be pressed
    ;; !! | command + control + optional + shift (hyper)
    ;; ## | optional any

    ;; to understand better how modifiers work in karabiner
    ;; karabiner definition of mandatory and optional
    ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;;
    ;; need to prefix C T O S F with ! or #



    ;; each manipulator has a description and multiple rules

    ;;{:des "..."                               ;; -> description
    ;; :rules[
    ;;          [<from>  <to>  <conditions>]    ;; -> rule 1
    ;;          [<from>  <to>  <conditions>]    ;; -> rule 2
    ;; ]}

    ;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
    ;;       |_____| |_______________| |_| |_________________________________________|
    ;;        <from>    <to>      <conditions>         <other options>
    ;;
    ;; karabiner docs: ;; https://pqrs.org/osx/karabiner/json.html#complex_modifications-manipulator-definition
    ;; <other options> includs ~to_if_alone~, ~to_if_held_down~,~to_after_key_up~, ~to_delayed_action~ and ~parameters~.
    ;;

    ;; (custom variables) & modifiers -> Advanced
    ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable


; EXAMPLES:
; https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126

; KEYCODES
; https://github.com/pqrs-org/Karabiner-Elements/issues/925


{:profiles
 {:Default {:default true
                  
                                
         :sim     50   ;; simultaneous_threshold_milliseconds (def: 50)
                       ;; keys need to be pressed within this threshold to be considered simultaneous
         :delay   80   ;; to_delayed_action_delay_milliseconds (def: 500)
                       ;; basically it means time after which the key press is count delayed

         :alone   1000  ;; to_if_alone_timeout_milliseconds (def: 1000)
                       ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
         :held    70   ;; to_if_held_down_threshold_milliseconds (def: 500)
                       ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
         }
                ;:delay   500
                                
                ;:alone   500
                                
                ;:held    1000
  }

 :devices {
    :apple [
            {:vendor_id 1452}
            {:vendor_id 76}
    ]
  }

 :applications {
    :Emacs   ["^org\\.gnu\\.Emacs$"]
    :Chromes ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]
 }

:layers {
            :caps-mode {:key :caps_lock :alone {:key :escape}}
         }

:simlayers {
            ;terminal
            :x-mode {:key :x} ; TODO: maybe if I copy it and add S, xS= will work? 
            ; chrome
            :c-mode {:key :c}
            ; spotify
            :s-mode {:key :s}
            ; emacs\pkm
            :z-mode {:key :z}
            ; ide
            :v-mode {:key :v}
            ; rest
            :q-mode {:key :q}
            ; db
            :d-mode {:key :d}
            ; finder
            :f-mode {:key :f}
            ; basic movements
            :space-mode {:key :spacebar} 
            :emacs-space-mode {:key :spacebar :condi :Emacs}
            }

; example of how to debug specific targets: :emacs "TITLE=\"%s\"; LOGS=`${HOME}/dots/karabiner/focus_emacs_and_spawn_if_needed.sh ${TITLE}`; osascript -e \"display dialog \\\"test: ${LOGS}\\\"\""

 :templates {
             ; first focus space then focus window so that it doesn't show workspace switching animatio
             ; this periodically hangs for seconds seemingly because of https://github.com/koekeishiya/yabai/issues/599 
             :app "APP=\"%s\"; TITLE=\"%s\"; /usr/local/bin/yabai -m space --focus $(/usr/local/bin/yabai -m query --windows | /usr/local/bin/jq \"[.[] | select(.app | contains(\\\"${APP}\\\")) | select(.title | contains(\\\"${TITLE}\\\")) | .space][0]\"); /usr/bin/open -a \"${APP}\"; /usr/local/bin/yabai -m window --focus $(/usr/local/bin/yabai -m query --windows | /usr/local/bin/jq \"[.[] | select(.app | contains(\\\"${APP}\\\")) | select(.title | contains(\\\"${TITLE}\\\")) | .id][0]\")" 
             ; this triggers MacOS'es default space switching animation if an app is in another desktop but at least never blocks
             ;:app "/usr/bin/open -a \"%s\""
             :emacs "TITLE=\"%s\"; ${HOME}/dots/karabiner/focus_emacs_and_spawn_if_needed.sh ${TITLE}"
             :focus_desktop "/usr/local/bin/yabai -m space --focus %d"
             :send_to_desktop "/usr/local/bin/yabai -m window --space %d"
             ;; https://github.com/koekeishiya/yabai/issues/83
             :monocle_toggle "${HOME}/dots/karabiner/toggle_monocle_mode.sh"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :test_mode "osascript -e 'display notification \"its me! %d\"'"}

:main [
       {:des "yabai"
        :rules [
                [:!C0 [:focus_desktop 1]]
                [:!SC0 [:send_to_desktop 1]]

                ; toggle monocle mode for current space
                [:!Cw [:monocle_toggle]]
                ; toggle floating and bring to center 
                [:!Ce ["/usr/local/bin/yabai -m window --toggle float; /usr/local/bin/yabai -m window --grid 4:4:1:1:2:2"]]
                ; rotate windows
                [:!Cr ["/usr/local/bin/yabai -m space --rotate 90"]]
                ; move focus around windows
                ;[:!Copen_bracket ["/usr/local/bin/yabai -m window --focus prev"]]
                ;[:!Cclose_bracket ["/usr/local/bin/yabai -m window --focus next"]]
                ; non-native fullscreen
                [:!Cf ["/usr/local/bin/yabai -m window --toggle zoom-fullscreen"]]
                [:!Cq ["/usr/local/bin/yabai -m window --close"]]
                :!Emacs
                [:!Cl ["/usr/local/bin/yabai -m window --focus east"]]
                [:!Ch ["/usr/local/bin/yabai -m window --focus west"]]
                [:!Ck ["/usr/local/bin/yabai -m window --focus north"]]
                [:!Cj ["/usr/local/bin/yabai -m window --focus south"]]
        ]}
       {:des "make apple keyboard more like kinesis"
        :rules [
                [:##grave_accent_and_tilde :hyphen :apple]
                [:##left_control :left_control :apple {:alone :grave_accent_and_tilde} ]
                [:##hyphen :vk_none :apple]
        ]}
       {:des "space cadet shift"
        :rules [
                [:##left_shift :left_shift nil {:alone [:!S9]}]
                [:##right_shift :right_shift nil {:alone [:!S0]}]
                [:!S9 :vk_none]
                [:!S0 :vk_none]
                [:##left_command :left_command nil {:alone [:!Scomma]}]
                [:##right_command :right_command nil {:alone [:!Speriod]}]
                [:!Sopen_bracket :vk_none]
                [:!Sclose_bracket :vk_none]
                [:!Scomma :vk_none]
                [:!Speriod :vk_none]
                [:left_arrow :!Sopen_bracket]
                [:right_arrow :!Sclose_bracket]

                ; disable left shifts for left half of keyboard
                [:!Sq :vk_none] [:!Sw :vk_none] [:!Se :vk_none] [:!Sr :vk_none] [:!St :vk_none] [:!Sa :vk_none] [:!Ss :vk_none] [:!Sd :vk_none] [:!Sf :vk_none] [:!Sg :vk_none] [:!Sz :vk_none] [:!Sx :vk_none] [:!Sc :vk_none] [:!Sv :vk_none] [:!Sb :vk_none] [:!S1 :vk_none] [:!S2 :vk_none] [:!S3 :vk_none] [:!S4 :vk_none] [:!S5 :vk_none]
                ; disable right shifts for right half of keyboard
                [:!Ry :vk_none] [:!Ru :vk_none] [:!Ri :vk_none] [:!Ro :vk_none] [:!Rp :vk_none] [:!Rh :vk_none] [:!Rj :vk_none] [:!Rk :vk_none] [:!Rl :vk_none] [:!Rn :vk_none] [:!Rm :vk_none] [:!R6 :vk_none] [:!R7 :vk_none] [:!R8 :vk_none] [:!R9 :vk_none] [:!R0 :vk_none] [:!Rperiod :vk_none] [:!Rcomma :vk_none]
        ]}
       {:des "caps lock -> esc if alone, hyper if used as a modifier"
        :rules [:caps-mode
        ]}
       {:des "essential movements"
         :rules [:space-mode
                 [:l :right_arrow]
                 [:h :left_arrow]
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:e :!Oright_arrow]
                 [:b :!Oleft_arrow]
                 [:0 :!Cleft_arrow]
                 [:4 :!Cright_arrow]
                 [:u :page_up]
                 [:d :page_down]
                 [:delete_or_backspace :!Odelete_or_backspace]
                ]}
      {:des "essential movements - emacs flavor"
         :rules [:emacs-space-mode
                 ; avy-goto-char-2 in Emacs
                 [:s [:!Ox :a :v :y :hyphen :g :o :t :o :hyphen :c :h :a :r :hyphen :2 :return_or_enter]]
                 ;[:s [:g :s :spacebar]]
                ]}
       {:des "finder"
         :rules [:f-mode
                [:i [:app "Finder" ""]]
         ]}
       {:des "exo"
          :rules [:z-mode
                  [:i [:app "Emacs" ""]]
                  [:o [:app "Todoist" ""]]
                  ;[:u [:emacs "@work"]]
                  ;[:!Sequal_sign [:send_to_desktop 14]]
                  ; Ω
                  [:x :!Oz]
                  ; §
                  [:c :!O6]
                  ; ∞
                  [:v :!O5]
                ]}
       {:des "code editor"
          :rules [:v-mode
                  [:u [:app "GoLand"]]
                  ;[:!Sequal_sign [:send_to_desktop 13]]
                ]}
       {:des "database"
          :rules [:d-mode
                  [:u [:app "MySQLWorkbench"]]
                  ;[:!Sequal_sign [:send_to_desktop 13]]
                ]}
       {:des "chats"
          :rules [:q-mode
                  [:y [:app "zoom.us"]]
                  [:i [:app "Telegram"]]
                  [:u [:app "Slack"]]
                  [:o [:app "Discord"]]
                  [:p [:app "Skype"]]
                  [:backslash [:app "Messenger"]]
                  ;[:!Sequal_sign [:send_to_desktop 12]]
                ]}
       {:des "terminal"
          :rules [:x-mode
                  [:i [:app "kitty"]]
                  [:u [:app "kitty"]]
                  ;[:!Sequal_sign [:send_to_desktop 15]]
                ]}
       {:des "spotify"
          :rules [:s-mode
                  [:i [:app "Spotify"]]

                  [:semicolon [:alfred "add_current_track_to_alfred_playlist_or_your_music" "com.vdesabou.spotify.mini.player"]] ; Add song to Likes playlist
                  [:quote [:alfred "remove_current_track_from_alfred_playlist_or_your_music" "com.vdesabou.spotify.mini.player"]] ; Add song to Likes playlist
                  [:k [:alfred "volume_up" "com.vdesabou.spotify.mini.player"]] 
                  [:j [:alfred "volume_down" "com.vdesabou.spotify.mini.player"]] 
                  [:l [:alfred "next" "com.vdesabou.spotify.mini.player"]] 
                  [:h [:alfred "prev" "com.vdesabou.spotify.mini.player"]] 

                  [:y [:alfred "add_current_track_to" "com.vdesabou.spotify.mini.player"]]
                  [:u [:alfred "remove_current_track_from" "com.vdesabou.spotify.mini.player"]]
                  [:p [:alfred "show_playlists" "com.vdesabou.spotify.mini.player"]]

                  [:spacebar [:alfred "playpause" "com.vdesabou.spotify.mini.player"]]

                  [:6 [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:2oIXR7f2gv55ud3RbOW4vn"]] ; Depth
                  [:9 [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:1kpoYbaRkk0ZQxWn3a6vdF"]] ; Anime Openings
                  [:0 [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:6lHWoB4CVNlSFKDJOZdatF"]] ; Anime Openings
                  [:equal_sign [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:37i9dQZEVXcBYxUH6cwJch"]] ; Discover Weekly

                  ;[:!Sequal_sign [:send_to_desktop 11]]
                ]}
       {:des "domains (chrome)"
          :rules [:c-mode
                  [:i [:app "Google Chrome" "Vladislav"]]
                  [:j [:km "grail: open console"]]
                  [:u [:app "Google Chrome" "Vlad"]]
                  ; TODO: figure out how to find Chrome's desktop & how to bind it to Shift-c-=) 
                  ; [:!Sequal_sign [:send_to_desktop 16]]

                  ; rest (quit)
                  ;[:1 [:focus_desktop 12]]
                  ;[:!S1 [:send_to_desktop 12]]
                  ;; strategy (what)
                  ;[:2 [:focus_desktop 13]]
                  ;[:!S2 [:send_to_desktop 13]]
                  ;; exo/pkm
                  ;[:3 [:focus_desktop 11]]
                  ;[:!S3 [:send_to_desktop 11]]
                  ;; lair
                  ;[:4 [:focus_desktop 10]]
                  ;[:!S4 [:send_to_desktop 10]]
                  ;; body (CT [scan])
                  ;[:5 [:focus_desktop 16]]
                  ;[:!S5 [:send_to_desktop 16]]
                  ;; Nk (N)
                  ;[:6 [:focus_desktop 3]]
                  ;[:!S6 [:send_to_desktop 3]]
                  ;; people (C U)
                  ;[:7 [:focus_desktop 15]]
                  ;[:!S7 [:send_to_desktop 15]]
                  ;; heal (oohm)
                  ;[:9 [:focus_desktop 14]]
                  ;[:!S9 [:send_to_desktop 14]]
                  ;; flair 
                  ;[:0 [:focus_desktop 2]]
                  ;[:!S0 [:send_to_desktop 2]]
                  ]}
;       {:des "right cmd -> meh"
;         :rules [[:##right_command :!CTright_option nil {:alone :right_command}]]}
;        {:des "right command mode"
;         :rules [:righ_command-mode
                 ;[:open_bracket :!SOTopen_bracket]
                 ;[:close_bracket :!SOTclose_bracket]
                 ;[:semicolon :!SOTsemicolon]
                 ;[:quote :!SOTquote]
                 ;[:comma :!SOTcomma]
                 ;[:period :!SOTperiod]
                 ;[:slash :!SOTslash]
                 ;[:a :!SOTa]
                 ;[:b :!SOTb]
                 ;[:c :!SOTc]
                 ;[:!Cc :!CSOTc]
                 ;[:d :!SOTd]
                 ;[:e :!SOTe]
                 ;[:f :!SOTf]
                 ;[:g :!SOTg]
                 ;[:h :!SOTh]
                 ;[:i :!SOTi]
                 ;[:j :!SOTj]
                 ;[:k :!SOTk]
                 ;[:l :!SOTl]
                 ;[:m :!SOTm]
                 ;[:n :!SOTn]
                 ;[:o :!SOTo]
                 ;[:p :!SOTp]
                 ;[:q :!SOTq]
                 ;[:r :!SOTr]
                 ;[:s :!SOTs]
                 ;[:t :!SOTt]
                 ;[:u :!SOTu]
                 ;[:v :!SOTv]
                 ;[:w :!SOTw]
                 ;[:x :!SOTx]
                 ;[:y :!SOTy]
                 ;[:z :!SOTz]
                 ;[:1 :!SOT1]
                 ;[:!C1 :!CSOT1]
                 ;[:2 :!SOT2]
                 ;[:3 :!SOT3]
                 ;[:4 :!SOT4]
                 ;[:5 :!SOT5]
                 ;[:6 :!SOT6]
                 ;[:7 :!SOT7]
                 ;[:8 :!SOT8]
                 ;[:9 :!SOT9]
;                 [:0 :!SOT0]]}
]}
